### LINUX ### 

- Browsing
    --> all 60 72
- Streaming
    --> chrome edge 72 -60
    --> firefox     81 -60

### WINDOWS ###

- Browsing
    --> all 60 72
- Streaming
    --> chrome edge 60 81
    --> firefox     81 -60

############# 

- firefox is duidelijk anders 
    --> max size 1405 uniek --> de grotere packets in plain zijn QUIC
    --> most frequent packet size 81 uniek bij streaming
    --> streaming --> minder packets
    --> browsing --> meer packets
- linux vs windows
    --> streaming anders
    --> plain naar VPN
        --> windows + 52 bytes
        --> linux   + 66 bytes

###############

WINDOWS
plain --> full ovpn packet = + 52 bytes (1315 --> 1367)
plain --> ovpn data = + 6 bytes (1315 --> 1321)

LINUX 
plain --> full ovpn packet = + 66 bytes (1301 --> 1367)
plain --> ovpn data = + 20 bytes (1301 --> 1321)


#####################

IMPORTANT OPENVPN PACKET SIZES

60 --> TCP ACK
61 --> TCP KEEP ALIVE ACK
72 --> TCP ACK with 12B OPTIONS (NOP NOP timestamp) || TCP DUP ACK || TCP SYN
80 --> QUIC || TCP ACK with 20B OPTIONS (NOP NOP SACK)
81 --> TCP ACK with 1B PAYLOAD || QUIC streaming 
82 - 83 --> QUIC streaming
84 --> QUIC || TCP ACK with 24B OPTIONS (NOP NOP timestamps NOP NOP SACK)
186 - 218 --> WINDOWS TLS CLIENT KEY EXCHANGE
133 - 145 - 178 - 199 --> LINUX TLS CLIENT KEY EXCHANGE 
577 - 589 --> TLS CLIENT HELLO --> webpage request

#####################
ssl.handshake.type == 1
    --> client hello 
ssl.handshake.type == 16
    --> key exchange 

TLS CLIENT HELLO

- linux chrome: 569 (557 + 12 TCP OPTIONS) 557 450 
- linux edge: 557 569    
- linux firefox: 569 557 

- windows chrome: 571 (557 + 14) 
- windows edge: 571 250 
- windows firefox: 571 

Windows en linux hebben dezelfde TLS HANDSHAKE PACKET size
	--> wss toevallig want linux heeft 1 ciphersuite meer (2B) maar windows heeft 1 extension meer (2B)
linux openvpn3 client verpakt de packets NIET met een ethernet header (stuurt het IP packet dus), Windows verpakt WEL in ethernet header --> eth header = static 14B --> windows packets typisch 14B meer 
	--> hierdoor zie je een verschil in sizes tussen windows en linux in vpn traces
TLS PADDING EXTENSION (https://datatracker.ietf.org/doc/html/rfc7685)
	--> increase length to at least 512 
"Unfortunately, there are TLS servers that refuse (and hang upon) ClientHello messages of sizes in the range 256-512 bytes, causing TLS handshake timeouts. 
RFC 7685 lets clients mitigate this by adding padding bytes to the ClientHello messages, so clients can adjust the ClientHello sizes at will as a workaround."
	--> https://github.com/golang/go/issues/39271 

TLS CLIENT HELLO PACKET
-----------------------
16B header (handshake, version, length of remainder of packet)
1B type (client hello)
3B length of remainder
2B version
32B random value 
1B Session ID
2B cipher suite info byte length
	--> cipher suites indicate which key-negotiation, encryption and MAC algorithms the client understands
1B #Compression mechanisms
1B 0 --> compression is not used but must be specified for packet to be valid 
?B extensions

#####################"

YouTube --> streaming over QUIC
Twitch --> streaming over HTTP (HLS)